{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\Alex\\\\Desktop\\\\project-3\\\\repo\\\\cod-tracker-auth\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Alex\\\\Desktop\\\\project-3\\\\repo\\\\cod-tracker-auth\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _require = require('rxjs/operators'),\n    map = _require.map;\n\nmodule.exports = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function KillOnSignal() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$process = _ref.process,\n        process = _ref$process === void 0 ? global.process : _ref$process;\n\n    _classCallCheck(this, KillOnSignal);\n\n    this.process = process;\n  }\n\n  _createClass(KillOnSignal, [{\n    key: \"handle\",\n    value: function handle(commands) {\n      var _this = this;\n\n      var caughtSignal;\n      ['SIGINT', 'SIGTERM'].forEach(function (signal) {\n        _this.process.on(signal, function () {\n          caughtSignal = signal;\n          commands.forEach(function (command) {\n            return command.kill(signal);\n          });\n        });\n      });\n      return commands.map(function (command) {\n        var closeStream = command.close.pipe(map(function (value) {\n          return caughtSignal === 'SIGINT' ? 0 : value;\n        }));\n        return new Proxy(command, {\n          get(target, prop) {\n            return prop === 'close' ? closeStream : target[prop];\n          }\n\n        });\n      });\n    }\n  }]);\n\n  return KillOnSignal;\n}();","map":{"version":3,"sources":["C:/Users/Alex/Desktop/project-3/repo/cod-tracker-auth/node_modules/concurrently/src/flow-control/kill-on-signal.js"],"names":["require","map","module","exports","process","global","commands","caughtSignal","forEach","signal","on","command","kill","closeStream","close","pipe","value","Proxy","get","target","prop"],"mappings":";;;;eAAgBA,OAAO,CAAC,gBAAD,C;IAAfC,G,YAAAA,G;;AAGRC,MAAM,CAACC,OAAP;AAAA;;AACI,0BAA+C;AAAA,mFAAJ,EAAI;AAAA,4BAAjCC,OAAiC;AAAA,QAAjCA,OAAiC,6BAAvBC,MAAM,CAACD,OAAgB;;AAAA;;AAC3C,SAAKA,OAAL,GAAeA,OAAf;AACH;;AAHL;AAAA;AAAA,2BAKWE,QALX,EAKqB;AAAA;;AACb,UAAIC,YAAJ;AACA,OAAC,QAAD,EAAW,SAAX,EAAsBC,OAAtB,CAA8B,UAAAC,MAAM,EAAI;AACpC,QAAA,KAAI,CAACL,OAAL,CAAaM,EAAb,CAAgBD,MAAhB,EAAwB,YAAM;AAC1BF,UAAAA,YAAY,GAAGE,MAAf;AACAH,UAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAG,OAAO;AAAA,mBAAIA,OAAO,CAACC,IAAR,CAAaH,MAAb,CAAJ;AAAA,WAAxB;AACH,SAHD;AAIH,OALD;AAOA,aAAOH,QAAQ,CAACL,GAAT,CAAa,UAAAU,OAAO,EAAI;AAC3B,YAAME,WAAW,GAAGF,OAAO,CAACG,KAAR,CAAcC,IAAd,CAAmBd,GAAG,CAAC,UAAAe,KAAK,EAAI;AAChD,iBAAOT,YAAY,KAAK,QAAjB,GAA4B,CAA5B,GAAgCS,KAAvC;AACH,SAFyC,CAAtB,CAApB;AAGA,eAAO,IAAIC,KAAJ,CAAUN,OAAV,EAAmB;AACtBO,UAAAA,GAAG,CAACC,MAAD,EAASC,IAAT,EAAe;AACd,mBAAOA,IAAI,KAAK,OAAT,GAAmBP,WAAnB,GAAiCM,MAAM,CAACC,IAAD,CAA9C;AACH;;AAHqB,SAAnB,CAAP;AAKH,OATM,CAAP;AAUH;AAxBL;;AAAA;AAAA","sourcesContent":["const { map } = require('rxjs/operators');\n\n\nmodule.exports = class KillOnSignal {\n    constructor({ process = global.process } = {}) {\n        this.process = process;\n    }\n\n    handle(commands) {\n        let caughtSignal;\n        ['SIGINT', 'SIGTERM'].forEach(signal => {\n            this.process.on(signal, () => {\n                caughtSignal = signal;\n                commands.forEach(command => command.kill(signal));\n            });\n        });\n\n        return commands.map(command => {\n            const closeStream = command.close.pipe(map(value => {\n                return caughtSignal === 'SIGINT' ? 0 : value;\n            }));\n            return new Proxy(command, {\n                get(target, prop) {\n                    return prop === 'close' ? closeStream : target[prop];\n                }\n            });\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"script"}