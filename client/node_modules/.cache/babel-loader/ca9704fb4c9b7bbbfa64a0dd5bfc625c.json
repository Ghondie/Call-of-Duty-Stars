{"ast":null,"code":"var supportsColor = require('supports-color');\n\nmodule.exports = function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$colorSupport = _ref.colorSupport,\n      colorSupport = _ref$colorSupport === void 0 ? supportsColor : _ref$colorSupport,\n      _ref$process = _ref.process,\n      process = _ref$process === void 0 ? global.process : _ref$process,\n      _ref$raw = _ref.raw,\n      raw = _ref$raw === void 0 ? false : _ref$raw;\n\n  return Object.assign({}, raw && {\n    stdio: 'inherit'\n  }, /^win/.test(process.platform) && {\n    detached: false\n  }, colorSupport && {\n    env: Object.assign({\n      FORCE_COLOR: colorSupport.level\n    }, process.env)\n  });\n};","map":{"version":3,"sources":["C:/Users/Alex/Desktop/project-3/repo/cod-tracker-auth/node_modules/concurrently/src/get-spawn-opts.js"],"names":["supportsColor","require","module","exports","colorSupport","process","global","raw","Object","assign","stdio","test","platform","detached","env","FORCE_COLOR","level"],"mappings":"AAAA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AAAA,iFAIb,EAJa;AAAA,+BACbC,YADa;AAAA,MACbA,YADa,kCACEJ,aADF;AAAA,0BAEbK,OAFa;AAAA,MAEbA,OAFa,6BAEHC,MAAM,CAACD,OAFJ;AAAA,sBAGbE,GAHa;AAAA,MAGbA,GAHa,yBAGP,KAHO;;AAAA,SAINC,MAAM,CAACC,MAAP,CACP,EADO,EAEPF,GAAG,IAAI;AAAEG,IAAAA,KAAK,EAAE;AAAT,GAFA,EAGP,OAAOC,IAAP,CAAYN,OAAO,CAACO,QAApB,KAAiC;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAH1B,EAIPT,YAAY,IAAI;AAAEU,IAAAA,GAAG,EAAEN,MAAM,CAACC,MAAP,CAAc;AAAEM,MAAAA,WAAW,EAAEX,YAAY,CAACY;AAA5B,KAAd,EAAmDX,OAAO,CAACS,GAA3D;AAAP,GAJT,CAJM;AAAA,CAAjB","sourcesContent":["const supportsColor = require('supports-color');\n\nmodule.exports = ({\n    colorSupport = supportsColor,\n    process = global.process,\n    raw = false\n} = {}) => Object.assign(\n    {},\n    raw && { stdio: 'inherit' },\n    /^win/.test(process.platform) && { detached: false },\n    colorSupport && { env: Object.assign({ FORCE_COLOR: colorSupport.level }, process.env) }\n);\n"]},"metadata":{},"sourceType":"script"}